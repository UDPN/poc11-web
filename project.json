{
  "name": "a4r-poc11",
  "$schema": "node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "prefix": "app",
  "sourceRoot": "./src",
  "tags": [],
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": [
        "{options.outputPath}"
      ],
      "options": {
        "outputPath": "dist/a4r-poc11",
        "index": "./src/index.html",
        "main": "./src/main.ts",
        "polyfills": [
          "zone.js"
        ],
        "tsConfig": "./tsconfig.app.json",
        "assets": [
          "./src/favicon.ico",
          "./src/assets",
          {
            "glob": "**/*",
            "input": "./node_modules/@ant-design/icons-angular/src/inline-svg/",
            "output": "/assets/"
          }
        ],
        "styles": [
          "node_modules/driver.js/dist/driver.min.css",
          {
            "input": "src/styles/default.less",
            "bundleName": "default",
            "inject": false
          },
          {
            "input": "src/styles/dark.less",
            "bundleName": "dark",
            "inject": false
          }
        ],
        "stylePreprocessorOptions": {
          "includePaths": [
            "src/styles/themes"
          ]
        },
        "scripts": [
          "node_modules/driver.js/dist/driver.min.js"
        ],
        "allowedCommonJsDependencies": [
          "rfdc",
          "jwt-encode",
          "@env/environment",
          "jszip",
          "qrcode",
          "crypto-js",
          "qs",
          "size-sensor",
          "pdfast",
          "regl",
          "inversify",
          "jquery",
          "lodash",
          "qrious",
          "driver.js",
          "file-saver",
          "fmin",
          "eventemitter3",
          "@cordobo/qrcode",
          "pbf",
          "polygon-clipping",
          "supercluster/dist/supercluster",
          "l7regl",
          "earcut",
          "mousetrap",
          "d3-regression",
          "mapbox-gl",
          "@amap/amap-jsapi-loader",
          "@mapbox/geojson-rewind",
          "@babel/runtime/regenerator",
          "@antv/l7-component",
          "inversify-inject-decorators",
          "deepmerge"
        ]
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "5mb",
              "maximumError": "6mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "10mb",
              "maximumError": "5mb"
            }
          ],
          "fileReplacements": [
            {
              "replace": "src/environments/environment.ts",
              "with": "src/environments/environment.prod.ts"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "options": {
        "host": "10.0.7.20",
        "port": 4215,
        "proxyConfig": "proxy.conf.json",
        "disableHostCheck": false
      },
      "configurations": {
        "production": {
          "browserTarget": "a4r-poc11:build:production"
        },
        "development": {
          "browserTarget": "a4r-poc11:build:development"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "browserTarget": "a4r-poc11:build"
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": [
        "{options.outputFile}"
      ],
      "options": {
        "lintFilePatterns": [
          "./src/**/*.ts",
          "./src/**/*.html"
        ]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": [
        "{workspaceRoot}/coverage/{projectName}"
      ],
      "options": {
        "jestConfig": "jest.config.ts",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    },
    "serve-static": {
      "executor": "@nx/web:file-server",
      "options": {
        "buildTarget": "a4r-poc11:build"
      }
    }
  }
}